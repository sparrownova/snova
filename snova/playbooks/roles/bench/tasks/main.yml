---
  - name: Check if /tmp/.snova exists
    stat:
      path: /tmp/.snova
    register: tmp_snova

  - name: Check if snova_repo_path exists
    stat:
      path: '{{ snova_repo_path }}'
    register: snova_repo_register

  - name: move /tmp/.snova if it exists
    command: 'cp -R /tmp/.snova {{ snova_repo_path }}'
    when: tmp_snova.stat.exists and not snova_repo_register.stat.exists

  - name: install snova
    pip:
      name: '{{ snova_repo_path }}'
      extra_args: '-e'
    become: yes
    become_user: root

  - name: Overwrite snova if required
    file:
      state: absent
      path: "{{ snova_path }}"
    when: overwrite

  - name: Check whether snova exists
    stat:
      path: "{{ snova_path }}"
    register: snova_stat

  - name: Fix permissions
    become_user: root
    command: chown {{ sparrow_user }} -R {{ user_directory }}

  - name:  python3 snova init for develop
    command: snova init {{ snova_path }} --sparrow-path {{ sparrow_repo_url }} --sparrow-branch {{ sparrow_branch }} --python {{ python }}
    args:
      creates: "{{ snova_path }}"
    when: not snova_stat.stat.exists and not production

  - name: python3 snova init for production
    command: snova init {{ snova_path }} --sparrow-path {{ sparrow_repo_url }} --sparrow-branch {{ sparrow_branch }} --python {{ python }}
    args:
      creates: "{{ snova_path }}"
    when: not snova_stat.stat.exists and production

  # setup common_site_config
  - name: setup config
    command: snova setup config
    args:
      creates: "{{ snova_path }}/sites/common_site_config.json"
      chdir: "{{ snova_path }}"

  - include_tasks: setup_inputrc.yml

  # Setup Procfile
  - name: Setup Procfile
    command: snova setup procfile
    args:
      creates: "{{ snova_path }}/Procfile"
      chdir: "{{ snova_path }}"

  # Setup Redis env for RQ
  - name: Setup Redis
    command: snova setup redis
    args:
      creates: "{{ snova_path }}/config/redis_socketio.conf"
      chdir: "{{ snova_path }}"

  # Setup an SHOPPER site
  - include_tasks: setup_shopper.yml
    when: not run_travis

  # Setup Snova for production environment
  - include_tasks: setup_snova_production.yml
    vars:
      snova_path: "{{ user_directory }}/{{ snova_name }}"
    when: not run_travis and production
...
